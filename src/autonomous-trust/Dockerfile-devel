# syntax=docker/dockerfile:1.3

# Runs AutonomousTrust from live sources

# Build from repo base dir:
#    docker build -t autonomous-trust-devel -f src/autonomous-trust/Dockerfile-devel .
# For rapid development, run as:
#    docker run --rm -u $(id -u):$(id -g) -v src/autonomous-trust:/app -it autonomous-trust-devel

FROM continuumio/miniconda3

WORKDIR /app
SHELL ["/bin/bash", "-c"]
RUN apt-get update && \
    apt-get install -y build-essential iproute2 iputils-ping iputils-arping iputils-tracepath sudo && \
    apt-get clean

COPY src/autonomous-trust/entrypoint.sh /bin/entrypoint.sh
ENV ROUTER="172.17.0.1"
ENTRYPOINT ["/bin/entrypoint.sh"]

RUN useradd -U user -d /app
RUN echo "ALL            ALL = (ALL) NOPASSWD: ALL" >>/etc/sudoers
RUN chmod -R 0777 /opt/conda
RUN chown -R user:user /app
USER user

RUN --mount=type=bind,source=tools,target=/app/.tools --mount=type=cache,target=/opt/conda/pkgs \
    .tools/trust devel install --environ
RUN --mount=type=bind,source=tools,target=/app/.tools --mount=type=cache,target=/opt/conda/pkgs \
    .tools/trust devel install --basic


SHELL ["conda", "run", "--live-stream", "-n", "autonomous_trust", "/bin/bash", "-c"]
RUN pip install pydevd-pycharm

COPY --chown=user:user src/autonomous-trust/.bashrc .bashrc
COPY --chown=user:user src/autonomous-trust/rust rust
COPY --chown=user:user src/autonomous-trust/autonomous_trust autonomous_trust
RUN rm -rf autonomous_trust/etc autonomous_trust/var

# if using rust, swap with lines below
#COPY --chown=user:user src/autonomous-trust/pyproject.toml.rust-ext pyproject.toml
#RUN maturin develop

COPY --chown=user:user src/autonomous-trust/pyproject.toml pyproject.toml
RUN poetry install

ENV AUTONOMOUS_TRUST_ARGS=""
CMD ["sh", "-c", "conda run --live-stream -n autonomous_trust python3 -m autonomous_trust $AUTONOMOUS_TRUST_ARGS || /bin/bash"]

