# Generic builder for conda packages
# Supports Rust/C/C++ extensions built with either 'python -m build' or 'maturin build'
# User must provide sources, including a meta.yaml file for conda-build

# Create multi-arch containers with: docker buildx build --platform linux/amd64,linux/arm64 --tag package-builder .
# Run with: docker run --rm -u $(id -u):$(id -g) -v /tmp:/tmp -v ~/path/to/source:/build/src -v ~/path/to/dist:/build/dist [-it | -d] package-builder:<arch>

# TODO This is not working. Likely related to https://github.com/conda/conda-build/issues/1482.
#      Placeholders are truncated by 28 characters to a length of 190.
#      Perhaps (quite likely) Docker does indirections similar to encryption.
#      Mounting does not help, and neither does '--prefix-length 100' in EXTRA_ARGS

ARG ARCH=
FROM ${ARCH}continuumio/anaconda-pkg-build:master

WORKDIR /build
SHELL ["/bin/bash", "-c"]
# Rely on most recent image for updates instead of this:
# RUN yum update -y && yum clean all

RUN conda update -y -n base conda
RUN conda config --add channels conda-forge
RUN conda install -y -n base conda-build conda-verify pip python-build maturin

ENV CARGO_HOME="/opt/rust"
RUN curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
ENV PATH="/opt/rust/bin:${PATH}"
RUN rustup install nightly && rustup default nightly

WORKDIR /build/src
ENV TEMPDIR=/build
RUN mkdir $TEMPDIR/conda-bld && chmod 777 $TEMPDIR/conda-bld
ARG UID=1000
RUN useradd -U user -u $UID -d /build/src
RUN mkdir /build/dist

ENV EXTRA_ARGS="--prefix-length 100 --prefix-length-fallback"
CMD ["/bin/bash", "-c", "conda build -c conda-forge --no-verify $EXTRA_ARGS --croot $TEMPDIR/conda-bld --output-folder /build/dist ."]

