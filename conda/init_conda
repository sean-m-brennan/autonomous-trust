
conda_activated=false
my_conda_base=$(cd "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
if [ -z "$use_pip" ]; then
    use_pip=false
fi
if [ -z "$environment" ]; then
    environment=autonomous_trust
fi

create_env () {
    local env=${1:-$environment}
    local pip=
    if [ "$use_pip" != "" ]; then
        pip=pip
    fi

    echo "Conda Python version $(conda run python --version)" >&2
    conda update -n base conda
    conda install -n base -c conda-forge mamba boa $pip
    if [ "$(conda env list | awk '{print $1}' | grep $env)" = "" ]; then
        mamba env create --file ${my_conda_base}/environment.yml
    fi
}

populate_env () {
    local env=${1:-$environment}

    if [ "$use_pip" != "" ]; then
        pip install -r ${my_conda_base}/environment.recipes.txt
    else
        for pkg in ${my_conda_base}/recipes/*; do
            prebuilt=false
            for arch in noarch $(conda run -n $env python3 ${my_conda_base}/getarch.py); do
                conda mambabuild $pkg
            done
        done
        conda config --add channels local
        mamba install -y -n $env --file ${my_conda_base}/environment.recipes.txt
    fi
}

activate_conda () {
    local env=${1:-$environment}

    # if not already in conda env, activate it
    if [ "$CONDA_PREFIX" = "" ] || [[ "$CONDA_PREFIX" != *"$env" ]]; then
        create_env $env
        populate_env $env

        conda_dir=$(conda info | grep -i 'base environment' | awk '{print $4}')
        source "$conda_dir/etc/profile.d/conda.sh"
        conda activate $env
    fi
    conda_activated=true
}

deactivate_conda () {
    if $conda_activated; then
        conda deactivate
    fi
}
